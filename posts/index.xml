<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Max Sharabayko Blog</title><link>https://maxsharabayko.github.io/blog/posts/</link><description>Recent content in Posts on Max Sharabayko Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 30 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://maxsharabayko.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Video Frame Sizes Visualization</title><link>https://maxsharabayko.github.io/blog/posts/plot-vc-frame-size/</link><pubDate>Wed, 30 Oct 2024 00:00:00 +0000</pubDate><guid>https://maxsharabayko.github.io/blog/posts/plot-vc-frame-size/</guid><description>&lt;p>In this tutorial, we&amp;rsquo;ll walk through how to use Python and Bokeh to visualize video frame sizes (H.264/AVC, H.265/HEVC, etc.)
and calculate moving average bitrate values from an MPEG TS file.
We&amp;rsquo;ll use &lt;code>ffprobe&lt;/code> to extract frame information and &lt;code>pandas&lt;/code> for data manipulation. Finally, we&amp;rsquo;ll create interactive plots with Bokeh.&lt;/p></description></item><item><title>Bjontegaard Delta-Rate Metric</title><link>https://maxsharabayko.github.io/blog/posts/bd-rate/</link><pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate><guid>https://maxsharabayko.github.io/blog/posts/bd-rate/</guid><description>&lt;p>A video encoder can be configured in many ways: different GOP (Group of Pictures) structure,
different quantization parameters (QP) or target bitrate,
motion compensation range, etc. Furthermore, different encoders likely produce different compressed streams.
Depending on the encoder and the configuration the same source video is compressed differently, each having its own bitrate and distortion value.
Bjontegaard Delta-Rate (BD Rate) metric can be used to compare and choose the encoder or configuration, that provides the best compression results.&lt;/p></description></item><item><title>Examining SRT Streaming over 4G Networks</title><link>https://maxsharabayko.github.io/blog/posts/srt-4g-streaming-2022/</link><pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate><guid>https://maxsharabayko.github.io/blog/posts/srt-4g-streaming-2022/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Modern mobile networks are used in a wide variety of ways, including contribution of live events from a mobile device, where the contributor can be stationary or moving. In this article we will examine the characteristics of a 4G network (and SRT behavior) with a stationary contribution source (TPLink M7000 Mobile WLAN Router) located in Northern Asia. The target ingest point is in Western Europe (Microsoft Azure cloud service). The maximum throughput declared by the Internet Service Provider (ISP) is 20 Mbps.&lt;/p></description></item><item><title>Next Generation Video Codecs: HEVC, VP9, Daala (2013)</title><link>https://maxsharabayko.github.io/blog/posts/nextgen-codecs-2013/</link><pubDate>Tue, 22 Oct 2013 00:00:00 +0000</pubDate><guid>https://maxsharabayko.github.io/blog/posts/nextgen-codecs-2013/</guid><description>&lt;p>Nowadays video services (digital television, Internet video etc.) are a common part of our live. According to Cisco [1] mobile video traffic was 51 percent of the entire global Internet traffic by the end of 2012 and it is expected to be 66 percent by 2017.
The demand on video and its quality is very high. Since the appearance of VoIP in 1984 video resolution has increased from QCIF (176×144 pixels) to Full HD (1920×1080). Now it is evolving to 4K (3840×2160) and 8K (7680×4320) UHD. But the higher the resolution and quality is, the higher bitrate it takes.
This paper contains a general review of new video compression standards HEVC, VP9 and Daala. Their compression efficiency is studied and compared to AVC.&lt;/p></description></item></channel></rss>